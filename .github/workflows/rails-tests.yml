name: Rails Tests

on:
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        ports: ['5432:5432']
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: backend_test
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2.2'
        bundler-cache: true

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install dependencies
      run: |
        cd backend
        bundle install
        yarn install

    - name: Install dockerize
      run: |
        sudo apt-get update
        sudo apt-get install -y wget
        wget https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz
        tar -xvf dockerize-linux-amd64-v0.6.1.tar.gz
        sudo mv dockerize /usr/local/bin/

    - name: Generate database.yml (if not present)
      run: |
        cd backend
        if [ ! -f config/database.yml ]; then
          echo "Generating config/database.yml"
          echo "default: &default
            adapter: postgresql
            encoding: unicode
            pool: <%= ENV.fetch('RAILS_MAX_THREADS') { 5 } %>
          development:
            <<: *default
            database: backend_development
          test:
            <<: *default
            database: backend_test
          production:
            <<: *default
            database: backend_production
            username: <%= ENV['DATABASE_USERNAME'] %>
            password: <%= ENV['DATABASE_PASSWORD'] %>" > config/database.yml
        fi

    - name: Set up database
      run: |
        cd backend
        dockerize -wait tcp://localhost:5432 -timeout 1m
        bundle exec rails db:create db:migrate

    - name: Run tests
      run: |
        cd backend
        bundle exec rake test
